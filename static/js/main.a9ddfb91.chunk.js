(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{11:function(e,t,n){e.exports=n(18)},16:function(e,t,n){},18:function(e,t,n){"use strict";n.r(t);var a=n(0),i=n.n(a),o=n(9),r=n.n(o),s=(n(16),n(2)),l=n(3),c=n(5),u=n(4),m=n(6),d=n(1),h=n(7),b=n(10),p=function(e){return i.a.createElement("div",{className:"position"},i.a.createElement("div",{className:"number"},e.position),e.imgs.map(function(e){var t=e.src,n=e.className,a=e.key;return i.a.createElement("img",{key:a,src:t,className:n,alt:""})}))},f=function(e){var t=Math.min(e.bluePosition,e.blueParachute,e.redPosition,e.redParachute)-2,n=Math.max(e.bluePosition,e.blueParachute,e.redPosition,e.redParachute)+2,a=Object(b.a)(Array(n-t).keys()).map(function(e){return e+t});return i.a.createElement("div",{className:"line"},a.map(function(t){return i.a.createElement(p,{key:t,position:t,imgs:function(t){var n=[];return t===e.blueParachute&&n.push({src:"parachute.png",className:"",key:"pb"}),t===e.redParachute&&n.push({src:"parachute.png",className:"",key:"pr"}),t===e.bluePosition&&n.push({src:"bot.png",className:"blue",key:"bb"}),t===e.redPosition&&n.push({src:"bot.png",className:"red",key:"br"}),n}(t)})}))},v=function(e){var t=e.commands,n=e.blueIndex,a=e.redIndex;return i.a.createElement("div",null,i.a.createElement("div",{className:"line"},t.split("").map(function(e,t){return i.a.createElement("div",{key:t,className:"position no-margin"},i.a.createElement("div",{className:"number"},t),t===n?i.a.createElement("img",{className:"blue",alt:""}):null,t===a?i.a.createElement("img",{className:"red",alt:""}):null,i.a.createElement("div",{className:"command"},e))})))},g=function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={commands:e.commands,blue:{commandIndex:0,positions:[e.bluePosition]},red:{commandIndex:0,positions:[e.redPosition]},play:!1},n.handleClick=n.handleClick.bind(Object(d.a)(Object(d.a)(n))),n.togglePlay=n.togglePlay.bind(Object(d.a)(Object(d.a)(n))),n.move=n.move.bind(Object(d.a)(Object(d.a)(n))),n.skipIf=n.skipIf.bind(Object(d.a)(Object(d.a)(n))),n.indexTo=n.indexTo.bind(Object(d.a)(Object(d.a)(n))),n.actions={L:n.move(-1),R:n.move(1),S:n.skipIf(),0:n.indexTo(0),1:n.indexTo(1),2:n.indexTo(2),3:n.indexTo(3),4:n.indexTo(4),5:n.indexTo(5),6:n.indexTo(6),7:n.indexTo(7),8:n.indexTo(8),9:n.indexTo(9)},n}return Object(m.a)(t,e),Object(l.a)(t,[{key:"togglePlay",value:function(){var e=this;this.setState(function(t){var n;return t.play?(clearInterval(t.play),n=!1):n=setInterval(function(){e.tick("red"),e.tick("blue"),e.won()&&e.togglePlay()},1e3),{play:n}})}},{key:"handleClick",value:function(){this.won()||(this.tick("red"),this.tick("blue"))}},{key:"won",value:function(){return this.state.blue.positions[this.state.blue.positions.length-1]===this.state.red.positions[this.state.red.positions.length-1]}},{key:"tick",value:function(e){var t=this.state.commands[this.state[e].commandIndex];(this.actions[t]||this.nullFunction)(e)}},{key:"nullFunction",value:function(){}},{key:"move",value:function(e){var t=this;return function(n){t.setState(function(t){var a=t[n],i=a.commandIndex,o=a.positions,r=o[o.length-1];return Object(h.a)({},n,{commandIndex:i+1,positions:o.concat(r+e)})})}}},{key:"skipIf",value:function(){var e=this;return function(t){e.setState(function(e){var n=e[t],a=n.commandIndex,i=n.positions,o=i[i.length-1],r=o===e.blue.positions[0]||o===e.red.positions[0]?a+2:a+1;return Object(h.a)({},t,{commandIndex:r,positions:i.concat(o)})})}}},{key:"indexTo",value:function(e){var t=this;return function(n){t.setState(function(t){var a=t[n].positions,i=a[a.length-1];return Object(h.a)({},n,{commandIndex:e,positions:a.concat(i)})})}}},{key:"render",value:function(){var e=this.won();return i.a.createElement("div",{className:"Game"},i.a.createElement(v,{commands:this.state.commands,blueIndex:this.state.blue.commandIndex,redIndex:this.state.red.commandIndex}),i.a.createElement("div",null,"Turn # ",this.state.blue.positions.length),e?i.a.createElement("div",null,"You won!"):i.a.createElement("button",{onClick:this.togglePlay},this.state.play?"Stop":"Auto Play"),i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement(f,{bluePosition:this.state.blue.positions[this.state.blue.positions.length-1],redPosition:this.state.red.positions[this.state.red.positions.length-1],blueParachute:this.state.blue.positions[0],redParachute:this.state.red.positions[0]}))}}]),t}(a.Component),k=function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={commands:"",started:!1},n.handleChange=n.handleChange.bind(Object(d.a)(Object(d.a)(n))),n.handleSubmit=n.handleSubmit.bind(Object(d.a)(Object(d.a)(n))),n}return Object(m.a)(t,e),Object(l.a)(t,[{key:"handleChange",value:function(e){var t=e.target.value.toUpperCase().split("").filter(function(e){return["L","R","S","0","1","2","3","4","5","6","7","8","9"].indexOf(e)>-1}).slice(0,10).join("");this.setState({commands:t})}},{key:"handleSubmit",value:function(e){e.preventDefault(),this.setState({started:!0})}},{key:"render",value:function(){return i.a.createElement("div",{className:"App"},i.a.createElement("header",null,i.a.createElement("h1",{className:"title"},i.a.createElement("img",{src:"bot.png",alt:""}),"\xa0 Robots on a",i.a.createElement("br",null),"Number Line \xa0",i.a.createElement("img",{src:"parachute.png",alt:""}))),i.a.createElement("br",null),i.a.createElement("br",null),this.state.started?i.a.createElement(g,{bluePosition:0,redPosition:5,commands:this.state.commands}):i.a.createElement("form",{onSubmit:this.handleSubmit},i.a.createElement("input",{onChange:this.handleChange,value:this.state.commands}),i.a.createElement("button",null,"Set commands and start"),i.a.createElement("p",null,"Two robots are parachuted onto a spot of a discrete number line that stretches infinitely in either direction. They are an unknown distance apart. Where they land, they drop their parachute. They begin executing the same set of instructions at the same time. Unfortunately, these are not very good robots, and they only understand commands in character form. There is only room for 10 instructions. Possible instructions are as follows:"),i.a.createElement("p",null,"L: Move left one space",i.a.createElement("br",null),"R: Move right one space",i.a.createElement("br",null),"S: Skip the next instruction if and only if there is a parachute at my feet",i.a.createElement("br",null),"0-9: Move to this position in the instructions (If the instructions are LRS1, the 1 would move the robot back to the 'R')",i.a.createElement("br",null)),i.a.createElement("p",null,"Every step takes the same amount of time to execute, including parachute skips and moving through the instructions. There is no variable storage. The robots begin executing from step 0. What set of instructions will result in the two robots ultimately finding each other on the infinite number line in every case? There are multiple possible answers."),i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement("br",null)),i.a.createElement("footer",null,"Simple implementation of XKCD Puzzle \xa0",i.a.createElement("a",{href:"http://wiki.xkcd.com/irc/Puzzles#Robots_on_a_number_line",target:"_blank",rel:"noopener noreferrer"},"Robots on a number line"),". \xa0",i.a.createElement("a",{href:"https://carlomartinucci.github.io/",target:"_blank",rel:"noopener noreferrer"},"Carlo Martinucci"),", 2017"))}}]),t}(a.Component),y=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function E(e){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var t=e.installing;t.onstatechange=function(){"installed"===t.state&&(navigator.serviceWorker.controller?console.log("New content is available; please refresh."):console.log("Content is cached for offline use."))}}}).catch(function(e){console.error("Error during service worker registration:",e)})}r.a.render(i.a.createElement(k,null),document.getElementById("root")),function(){if("serviceWorker"in navigator){if(new URL("/robot-line",window.location).origin!==window.location.origin)return;window.addEventListener("load",function(){var e="".concat("/robot-line","/service-worker.js");y?function(e){fetch(e).then(function(t){404===t.status||-1===t.headers.get("content-type").indexOf("javascript")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):E(e)}).catch(function(){console.log("No internet connection found. App is running in offline mode.")})}(e):E(e)})}}()}},[[11,2,1]]]);
//# sourceMappingURL=main.a9ddfb91.chunk.js.map